[Application Options]

; ------------------------------------------------------------------------------
; Data settings
; ------------------------------------------------------------------------------

; The directory to store data such as the block chain and peer addresses.  The
; block chain takes several GB, so this location must have a lot of free space.
; The default is ~/.btcd/data on POSIX OSes and $APPDATA/btcd/data on Windows.
; Environment variables are expanded so they may be used.  NOTE: Windows
; environment variables are typically %VARIABLE%, but they must be accessed with
; $VARIABLE here.  Also, ~ is expanded to $APPDATA on Windows.
; datadir=~/.btcd/data


; ------------------------------------------------------------------------------
; Network settings
; ------------------------------------------------------------------------------

; Use testnet.
; testnet=1

; Connect via a SOCKS5 proxy.  NOTE: Specifying a proxy without the 'tor' option
; below will disable listening for incoming connections.
; proxy=127.0.0.1:9050
; proxyuser=
; proxypass=

; The SOCKS5 proxy above is Tor (https://www.torproject.org).
; Although not required if the proxy set is indeed Tor, setting this option
; does the following: 
;    - Sends DNS queries over the Tor network (during DNS seed lookup).  This
;      stops your IP from being leaked via DNS.
;    - Does not disable the listening port.  This allows the hidden services
;      feature of Tor to be used. 
; tor=1

; ******************************************************************************
; Only one of the following two options, 'addpeer' and 'connect', may be
; specified.  Both allow you to specify peers that you want to stay connected
; with, but the behavior is slightly different.  By default, btcd will query DNS
; to find peers to connect to, so unless you have a specific reason such as
; those described below, you probably won't need to modify anything here.
;
; 'addpeer' does not prevent connections to other peers discovered from
; the peers you are connected to and also lets the remote peers know you are
; available so they can notify other peers they can to connect to you.  This
; option might be useful if you are having problems finding a node for some
; reason (perhaps due to a firewall).
;
; 'connect', on the other hand, will ONLY connect to the specified peers and
; no others.  It also disables listening and DNS seeding, so you will not be
; advertised as an available peer to the peers you connect to and won't accept
; connections from any other peers.  So, the 'connect' option effectively allows
; you to only connect to "trusted" peers.
; ******************************************************************************

; Add persistent peers to connect to as desired.  One peer per line.
; You may specify each IP address with or without a port.  The default port will
; be added automatically if one is not specified here.
; addpeer=192.168.1.1
; addpeer=10.0.0.2:8333
; addpeer=fe80::1
; addpeer=[fe80::2]:8333

; Add persistent peers that you ONLY want to connect to as desired.  One peer
; per line.  You may specify each IP address with or without a port.  The
; default port will be added automatically if one is not specified here.
; NOTE: Specifying this option will disable listening for incoming connections
; and DNS seeding for peers.
; connect=192.168.1.1
; connect=10.0.0.2:8333
; connect=fe80::1
; connect=[fe80::2]:8333

; Maximum number of inbound and outbound peers.
; maxpeers=8

; How long to ban misbehaving peers. Valid time units are {s, m, h}.
; Minimum 1s.
; banduration=24h
; banduration=11h30m15s

; Disable DNS seeding for peers.  By default, when btcd starts, it will use
; DNS to query for available peers to connect with.
; nodnsseed=1

; Disable listening for incoming connections.
; nolisten=1


; ------------------------------------------------------------------------------
; RPC server options - The following options control the built-in RPC server
; which is used to control and query information from a running btcd process.
;
; NOTE: The RPC server is disabled by default if no rpcuser or rpcpass is
; specified.
; ------------------------------------------------------------------------------

; Secure the RPC API by specifying the username and password.  You must specify
; both or the RPC server will be disabled.
; rpcuser=whatever_username_you_want
; rpcpass=

; Use the following setting to disable the RPC server even if the rpcuser and
; rpcpass are specified above.  This allows one to quickly disable the RPC
; server without having to remove credentials from the config file.
; norpc=1

; The port used to listen for RPC connections.
; rpcport=8334


; ------------------------------------------------------------------------------
; Debug
; ------------------------------------------------------------------------------

; Debug logging level.
; Valid options are {trace, debug, info, warn, error, critical}
; debuglevel=info

; The port used to listen for HTTP profile requests.  The profile server will
; be disabled if this option is not specified.  The profile information can be
; accessed at http://localhost:<profileport>/debug/pprof once running.
; profile=6061
